[project]
name = "mcp-audio-server"
version = "0.1.0"
description = "MCP server for audio transcription, intelligent splitting, and meeting analysis using Groq's Whisper API"
readme = "README.md"
authors = [
    { name = "Aditya K.", email = "97k.work@gmail.com" }
]
license = { text = "MIT" }
requires-python = ">=3.13"
keywords = ["mcp", "model-context-protocol", "audio", "transcription", "whisper", "groq", "meeting-analysis"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "fastmcp>=2.8.0",
    "groq>=0.4.0",
    "pydub>=0.25.1",
    "aiofiles>=23.2.1",
    "click>=8.1.7",
    "pathlib>=1.0.1",
    "typing-extensions>=4.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
]

[project.scripts]
mcp-audio-server = "mcp_audio_server.server:main"
mcp-audio-client = "mcp_audio_server.client:main"

[project.urls]
Homepage = "https://github.com/97k/mcp-audio-server"
Repository = "https://github.com/97k/mcp-audio-server"
Issues = "https://github.com/97k/mcp-audio-server/issues"
Documentation = "https://github.com/97k/mcp-audio-server#readme"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
]

[tool.black]
line-length = 88
target-version = ['py313']

[tool.ruff]
target-version = "py313"
line-length = 88
select = ["E", "F", "W", "I", "N", "UP"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
